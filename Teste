-- Hub Mobile Delta Executor - Paginado, Toggle e Funções
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local LocalPlayer = Players.LocalPlayer
local Character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
local Humanoid = Character:WaitForChild("Humanoid")
local HRP = Character:WaitForChild("HumanoidRootPart")

-- SETTINGS
local flySpeed = 50
local noclipEnabled = false
local godModeEnabled = false
local speedValue = 16
local jumpValue = 50
local tpEnabled = false
local page = 1

-- GUI
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Name = "MobileFlyHub"
ScreenGui.ResetOnSpawn = false
ScreenGui.Parent = LocalPlayer:WaitForChild("PlayerGui")

-- Toggle Button (abrir/fechar)
local toggleBtn = Instance.new("TextButton")
toggleBtn.Size = UDim2.new(0,60,0,30)
toggleBtn.Position = UDim2.new(0,10,0,50)
toggleBtn.BackgroundColor3 = Color3.fromRGB(255,0,0)
toggleBtn.Text = "Hub"
toggleBtn.TextScaled = true
toggleBtn.Parent = ScreenGui

-- Main Frame
local frame = Instance.new("Frame")
frame.Size = UDim2.new(0, 300, 0, 400)
frame.Position = UDim2.new(0.5, -150, 0.1, 0)
frame.BackgroundColor3 = Color3.fromRGB(30,30,30)
frame.BorderSizePixel = 2
frame.Active = true
frame.Draggable = true
frame.Parent = ScreenGui
frame.Visible = false

-- Título
local title = Instance.new("TextLabel")
title.Size = UDim2.new(1,0,0,40)
title.Position = UDim2.new(0,0,0,0)
title.BackgroundTransparency = 1
title.Text = "Mobile Fly Hub"
title.TextColor3 = Color3.fromRGB(255,255,255)
title.TextScaled = true
title.Parent = frame

-- Página Navigation
local prevBtn = Instance.new("TextButton")
prevBtn.Size = UDim2.new(0,50,0,30)
prevBtn.Position = UDim2.new(0,10,1,-40)
prevBtn.Text = "<"
prevBtn.TextScaled = true
prevBtn.BackgroundColor3 = Color3.fromRGB(100,100,100)
prevBtn.Parent = frame

local nextBtn = Instance.new("TextButton")
nextBtn.Size = UDim2.new(0,50,0,30)
nextBtn.Position = UDim2.new(1,-60,1,-40)
nextBtn.Text = ">"
nextBtn.TextScaled = true
nextBtn.BackgroundColor3 = Color3.fromRGB(100,100,100)
nextBtn.Parent = frame

-- Função criar botão de função
local function createButton(text, y, parent)
    local btn = Instance.new("TextButton")
    btn.Size = UDim2.new(0.8,0,0,35)
    btn.Position = UDim2.new(0.1,0,y,0)
    btn.BackgroundColor3 = Color3.fromRGB(255,0,0)
    btn.TextColor3 = Color3.fromRGB(255,255,255)
    btn.Text = text
    btn.TextScaled = true
    btn.Parent = parent
    return btn
end

-- Funções: Criar todas as páginas
local pages = {}
for i=1,2 do
    local pg = Instance.new("Frame")
    pg.Size = UDim2.new(1,0,1,-50)
    pg.Position = UDim2.new(0,0,0,40)
    pg.BackgroundTransparency = 1
    pg.Parent = frame
    pg.Visible = i==1
    pages[i] = pg
end

-- Página 1: Fly, Noclip, GodMode
local flyBtn = createButton("Fly: OFF", 0, pages[1])
local noclipBtn = createButton("Noclip: OFF", 50, pages[1])
local godBtn = createButton("GodMode: OFF", 100, pages[1])

-- Página 2: Speed, Jump, TP
local speedBtn = createButton("Speed: 16", 0, pages[2])
local jumpBtn = createButton("Jump: 50", 50, pages[2])
local tpBtn = createButton("TP: OFF", 100, pages[2])

-- Toggle Frame
toggleBtn.MouseButton1Click:Connect(function()
    frame.Visible = not frame.Visible
end)

-- Paginação
prevBtn.MouseButton1Click:Connect(function()
    page = page - 1
    if page < 1 then page = #pages end
    for i,p in pairs(pages) do p.Visible = i==page end
end)

nextBtn.MouseButton1Click:Connect(function()
    page = page + 1
    if page > #pages then page = 1 end
    for i,p in pairs(pages) do p.Visible = i==page end
end)

-- Rainbow opcional
local rainbow = true
RunService.RenderStepped:Connect(function()
    if rainbow then
        local r = tick()%1
        frame.BackgroundColor3 = Color3.fromHSV(r,0.7,0.9)
    end
end)

-- Funções dos botões
local flying = false
flyBtn.MouseButton1Click:Connect(function()
    flying = not flying
    flyBtn.Text = flying and "Fly: ON" or "Fly: OFF"
end)

noclipBtn.MouseButton1Click:Connect(function()
    noclipEnabled = not noclipEnabled
    noclipBtn.Text = noclipEnabled and "Noclip: ON" or "Noclip: OFF"
end)

RunService.Stepped:Connect(function()
    if noclipEnabled then
        for _, part in pairs(Character:GetDescendants()) do
            if part:IsA("BasePart") then
                part.CanCollide = false
            end
        end
    end
end)

godBtn.MouseButton1Click:Connect(function()
    godModeEnabled = not godModeEnabled
    godBtn.Text = godModeEnabled and "GodMode: ON" or "GodMode: OFF"
    Humanoid.MaxHealth = godModeEnabled and math.huge or 100
    Humanoid.Health = Humanoid.MaxHealth
end)

speedBtn.MouseButton1Click:Connect(function()
    speedValue = speedValue + 16
    if speedValue > 100 then speedValue = 16 end
    speedBtn.Text = "Speed: "..speedValue
    Humanoid.WalkSpeed = speedValue
end)

jumpBtn.MouseButton1Click:Connect(function()
    jumpValue = jumpValue + 25
    if jumpValue > 200 then jumpValue = 50 end
    jumpBtn.Text = "Jump: "..jumpValue
    Humanoid.JumpPower = jumpValue
end)

tpBtn.MouseButton1Click:Connect(function()
    tpEnabled = not tpEnabled
    tpBtn.Text = tpEnabled and "TP: ON" or "TP: OFF"
end)

-- Fly Movement
local flyDirection = Vector3.new(0,0,0)
UserInputService.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.Keyboard then
        if input.KeyCode == Enum.KeyCode.W then flyDirection = flyDirection + Vector3.new(0,0,-1) end
        if input.KeyCode == Enum.KeyCode.S then flyDirection = flyDirection + Vector3.new(0,0,1) end
        if input.KeyCode == Enum.KeyCode.A then flyDirection = flyDirection + Vector3.new(-1,0,0) end
        if input.KeyCode == Enum.KeyCode.D then flyDirection = flyDirection + Vector3.new(1,0,0) end
        if input.KeyCode == Enum.KeyCode.Space then flyDirection = flyDirection + Vector3.new(0,1,0) end
        if input.KeyCode == Enum.KeyCode.LeftShift then flyDirection = flyDirection + Vector3.new(0,-1,0) end
    end
end)

UserInputService.InputEnded:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.Keyboard then
        flyDirection = Vector3.new(0,0,0)
    end
end)

RunService.RenderStepped:Connect(function(dt)
    if flying then
        HRP.CFrame = HRP.CFrame + flyDirection.Unit * flySpeed * dt
    end
end)

-- Teleporte clicando na tela
local mouse = LocalPlayer:GetMouse()
mouse.Button1Down:Connect(function()
    if tpEnabled and UserInputService.TouchEnabled then
        local pos = mouse.Hit.p
        HRP.CFrame = CFrame.new(pos + Vector3.new(0,3,0))
    end
end)
